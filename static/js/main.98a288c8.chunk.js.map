{"version":3,"sources":["components/Pokemon.js","components/PokeDetails.js","components/Pokeball.png","components/Type.js","components/Pokemons.js","components/Types.js","components/PokeDex.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Pokemon","props","pokemon","name","img","to","className","src","PokeDetails","description","types","Type","byType","Pokeball","Pokemons","eachPokemon","path","map","exact","eachType","filter","filterByType","includes","Types","size","connect","state","pokemons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ntnlnum","reducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98a288c8.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Pokemon = (props) => {\r\n    let {name, img} = props.pokemon\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to = {\"/PokeDex/\" + name }>\r\n                    <div className=\"tableContainer\">\r\n                        <img className=\"picture\" src={img}/>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;","\r\nconst PokeDetails = (props) => {\r\n    let {name, img, description, types} = props.pokemon\r\n    return (\r\n        <div>\r\n            <div className=\"detailBox\">\r\n                <div className=\"detailName\"><b>{name}</b></div> \r\n                <div className=\"detailImg\">\r\n                    <img className=\"detailPic\" src={img}/>\r\n                </div>\r\n                \r\n                <br />\r\n\r\n                <div className=\"footer\">\r\n                    <div className=\"detailType\">\r\n                        {types}\r\n                    </div> \r\n                \r\n                    <br />\r\n                    \r\n                    <div className=\"detail\">{description}</div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeDetails","export default __webpack_public_path__ + \"static/media/Pokeball.b2c9e1ac.png\";","import {Link} from 'react-router-dom'\r\nimport Pokeball from './Pokeball.png'\r\n\r\n\r\n\r\nconst Type = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"typeBtnContainer\">\r\n                <Link to = {\"/PokeDex/\" + props.byType}> \r\n                    <button\r\n                    className=\"typeBtn\">\r\n                    <img className=\"pokeball\" src={Pokeball}/>\r\n                    {props.byType}\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Type;","import Pokemon from \"./Pokemon\";\r\nimport {Route} from 'react-router-dom'\r\nimport PokeDetails from \"./PokeDetails\";\r\nimport Type from \"./Type\";\r\n\r\nconst Pokemons = (props) => {\r\n    let eachPokemon = props.eachPokemon;\r\n        return (\r\n            <div>\r\n                <div className=\"cardBox\">\r\n                <Route path = {\"/PokeDex/\" + \"Home\"}>\r\n                    { eachPokemon.map (\r\n                        pokemon =>\r\n                    <Pokemon\r\n                    pokemon={pokemon}\r\n                    /> )}\r\n                </Route>\r\n\r\n                {eachPokemon.map (\r\n                    pokemon => \r\n                    <Route exact path = {\"/PokeDex/\" + pokemon.name } >\r\n                        <PokeDetails\r\n                        pokemon={pokemon}/>\r\n                    </Route>\r\n                )}\r\n\r\n                {/* {props.eachType.map (\r\n                    type =>\r\n                    <Route exact path = {\"/PokeDex/\" + pokemon.name } >\r\n                        <PokeDetails\r\n                        type={type}/>\r\n                    </Route>\r\n                )} */}\r\n                </div>\r\n\r\n                <div className=\"cardBox\">\r\n                    \r\n                    {props.eachType.map (byType =>\r\n                        \r\n                        <Route path={\"/PokeDex/\" + byType}>\r\n                            { eachPokemon.filter( filterByType => \r\n                            filterByType.types.includes(byType)).map(pokemon =>\r\n\r\n                            <Pokemon\r\n                                byType={byType}\r\n                                pokemon={pokemon}\r\n                            />\r\n                            )}\r\n                        </Route>)\r\n                    }\r\n                </div>\r\n  \r\n            </div>\r\n        ) \r\n}\r\n\r\nexport default Pokemons;","import Type from \"./Type\";\r\nimport { Link} from 'react-router-dom'\r\nimport {SiPokemon} from 'react-icons/si'\r\n\r\nconst Types = (props) => {\r\n    let eachType = props.eachType;\r\n    return (\r\n        <div>\r\n            <div className=\"homeBtnBox\">\r\n                <Link to = {\"/PokeDex/\" + \"Home\"}> \r\n                    <button\r\n                        className=\"homeBtn\">\r\n                            <SiPokemon size={70}/>\r\n                    </button>\r\n                </Link>\r\n\r\n\r\n                {eachType.map(byType => \r\n                <Type\r\n                byType={byType}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Types","import Pokemons from \"./Pokemons\";\r\nimport Types from './Types'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PokeDex = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mainBox\">  \r\n            \r\n                <div className=\"typeBox\">\r\n                    <Types\r\n                    eachType={props.types}\r\n                    />\r\n                </div>\r\n\r\n            \r\n                <div className=\"pokemonBox\">\r\n                    <Pokemons\r\n                    eachType={props.types}\r\n                    eachPokemon={props.pokemons}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons,\r\n        types: state.types  \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PokeDex);","import './App.css';\r\nimport PokeDex from './components/PokeDex'\r\n\r\n\r\nfunction App () {\r\n  return (\r\n      <div className=\"App\">\r\n        <PokeDex />\r\n      </div>\r\n    \r\n  )\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    pokemons: [\r\n        {\r\n            name: \"Bulbasaur\",\r\n            ntnlnum: \"#001\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/bulbasaur.png\",\r\n            types: [\"Grass\", \"Poison\"],\r\n            description: 'There is a plant seed on its back right from the day this Pokémon is born. The seed slowly grows larger.'\r\n        },\r\n        {\r\n            name: \"Ivysaur\",\r\n            ntnlnum: \"#002\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/ivysaur.png\",\r\n            types: [\"Grass\", \"Poison\"],\r\n            description: 'When the bulb on its back grows large, it appears to lose the ability to stand on its hind legs.'\r\n        },\r\n        {\r\n            name: \"Venusaur\",\r\n            ntnlnum: \"#003\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/venusaur.png\",\r\n            types: [\"Grass\", \"Poison\"],\r\n            description: 'Its plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight.'\r\n        },\r\n        {\r\n            name: \"Charmander\",\r\n            ntnlnum: \"#004\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/charmander.png\",\r\n            types: [\"Fire\"],\r\n            description: 'It has a preference for hot things. When it rains, steam is said to spout from the tip of its tail.'\r\n        },\r\n        {\r\n            name: \"Charmeleon\",\r\n            ntnlnum: \"#005\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/charmeleon.png\",\r\n            types: [\"Fire\"],\r\n            description: 'It has a barbaric nature. In battle, it whips its fiery tail around and slashes away with sharp claws.'\r\n        },\r\n        {\r\n            name: \"Charizard\",\r\n            ntnlnum: \"#006\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/charizard.png\",\r\n            types: [\"Fire\", \"Flying\"],\r\n            description: 'It spits fire that is hot enough to melt boulders. It may cause forest fires by blowing flames.'\r\n        },\r\n        {\r\n            name: \"Squirtle\",\r\n            ntnlnum: \"#007\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/squirtle.png\",\r\n            types: [\"Water\"],\r\n            description: 'When it retracts its long neck into its shell, it squirts out water with vigorous force.'\r\n        },\r\n        {\r\n            name: \"Caterpie\",\r\n            ntnlnum: \"#010\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/caterpie.png\",\r\n            types: [\"Bug\"],\r\n            description: 'For protection, it releases a horrible stench from the antenna on its head to drive away enemies.'\r\n        },\r\n        {\r\n            name: \"Pidgey\",\r\n            ntnlnum: \"#016\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/pidgey.png\",\r\n            types: [\"Normal\", \"Flying\"],\r\n            description: 'Very docile. If attacked, it will often kick up sand to protect itself rather than fight back.'\r\n        },\r\n        {\r\n            name: \"Pidgeotto\",\r\n            ntnlnum: \"#017\",\r\n            img: \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/017.png\",\r\n            types: [\"Normal\", \"Flying\"],\r\n            description: 'This Pokémon is full of vitality. It constantly flies around its large territory in search of prey.'\r\n        },\r\n        {\r\n            name: \"Pidgeot\",\r\n            ntnlnum: \"#018\",\r\n            img: \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/018.png\",\r\n            types: [\"Normal\", \"Flying\"],\r\n            description: 'This Pokémon flies at Mach 2 speed, seeking prey. Its large talons are feared as wicked weapons.'\r\n        },\r\n        {\r\n            name: \"Rattata\",\r\n            ntnlnum: \"#019\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/rattata.png\",\r\n            types: [\"Normal\"],\r\n            description: 'Will chew on anything with its fangs. If you see one, you can be certain that 40 more live in the area.'\r\n        },\r\n        {\r\n            name: \"Arbok\",\r\n            ntnlnum: \"#024\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/arbok.png\",\r\n            types: [\"Poison\"],\r\n            description: 'The frightening patterns on its belly have been studied. Six variations have been confirmed.'\r\n        },\r\n        {\r\n            name: \"Pikachu\",\r\n            ntnlnum: \"#025\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/pikachu-alt2.png\",\r\n            types: [\"Electric\"],\r\n            description: 'Pikachu that can generate powerful electricity have cheek sacs that are extra soft and super stretchy.'\r\n        },\r\n        {\r\n            name: \"Sandshrew\",\r\n            ntnlnum: \"#027\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/sandshrew.png\",\r\n            types: [\"Ground\"],\r\n            description: 'It loves to bathe in the grit of dry, sandy areas. By sand bathing, the Pokémon rids itself of dirt and moisture clinging to its body.'\r\n        },\r\n        {\r\n            name: \"Jigglypuff\",\r\n            ntnlnum: \"#039\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/jigglypuff.png\",\r\n            types: [\"Fairy\"],\r\n            description: 'Jigglypuff has top-notch lung capacity, even by comparison to other Pokémon. It won’t stop singing its lullabies until its foes fall asleep.'\r\n        },\r\n        {\r\n            name: \"Mankey\",\r\n            ntnlnum: \"#056\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/mankey.png\",\r\n            types: [\"Fighting\"],\r\n            description: 'An agile Pokémon that lives in trees. It angers easily and will not hesitate to attack anything.'\r\n        },\r\n        {\r\n            name: \"Poliwrath\",\r\n            ntnlnum: \"#062\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/poliwrath.png\",\r\n            types: [\"Water\", \"Fighting\"],\r\n            description: 'Its body is solid muscle. When swimming through cold seas, Poliwrath uses its impressive arms to smash through drift ice and plow forward.'\r\n        },\r\n        {\r\n            name: \"Geodude\",\r\n            ntnlnum: \"#074\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/geodude.png\",\r\n            types: [\"Rock\", \"Ground\"],\r\n            description: 'Commonly found near mountain trails and the like. If you step on one by accident, it gets angry.'\r\n        },\r\n        {\r\n            name: \"Magnemite\",\r\n            ntnlnum: \"#081\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/magnemite.png\",\r\n            types: [\"Electric\", \"Steel\"],\r\n            description: 'At times, Magnemite runs out of electricity and ends up on the ground. If you give batteries to a grounded Magnemite, it’ll start moving again.'\r\n        },\r\n        {\r\n            name: \"Cloyster\",\r\n            ntnlnum: \"#091\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/cloyster.png\",\r\n            types: [\"Water\", \"Ice\"],\r\n            description: 'Its shell is extremely hard. It cannot be shattered, even with a bomb. The shell opens only when it is attacking.'\r\n        },\r\n        {\r\n            name: \"Gastly\",\r\n            ntnlnum: \"#092\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/gastly.png\",\r\n            types: [\"Ghost\"],\r\n            description: 'Born from gases, anyone would faint if engulfed by its gaseous body, which contains poison.'\r\n        },\r\n        {\r\n            name: \"Haunter\",\r\n            ntnlnum: \"#093\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/haunter.png\",\r\n            types: [\"Ghost\", \"Poison\"],\r\n            description: 'Its tongue is made of gas. If licked, its victim starts shaking constantly until death eventually comes.'\r\n        },\r\n        {\r\n            name: \"Gengar\",\r\n            ntnlnum: \"#094\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/gengar.png\",\r\n            types: [\"Ghost\", \"Poison\"],\r\n            description: 'On the night of a full moon, if shadows move on their own and laugh, it must be Gengar’s doing.'\r\n        },\r\n        {\r\n            name: \"Scyther\",\r\n            ntnlnum: \"#123\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/scyther.png\",\r\n            types: [\"Bug\", \"Flying\"],\r\n            description: 'As Scyther fights more and more battles, its scythes become sharper and sharper. With a single slice, Scyther can fell a massive tree.'\r\n        },\r\n        {\r\n            name: \"Omanyte\",\r\n            ntnlnum: \"#138\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/omanyte.png\",\r\n            types: [\"Rock\", \"Water\"],\r\n            description: 'Because some Omanyte manage to escape after being restored or are released into the wild by people, this species is becoming a problem.'\r\n        },\r\n        {\r\n            name: \"Aerodactyl\",\r\n            ntnlnum: \"#142\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/aerodactyl.png\",\r\n            types: [\"Flying\"],\r\n            description: 'This is a ferocious Pokémon from ancient times. Apparently even modern technology is incapable of producing a perfectly restored specimen.'\r\n        },\r\n        {\r\n            name: \"Articuno\",\r\n            ntnlnum: \"#144\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/articuno.png\",\r\n            types: [\"Ice\", \"Flying\"],\r\n            description: 'It’s said that this Pokémon’s beautiful blue wings are made of ice. Articuno flies over snowy mountains, its long tail fluttering along behind it.'\r\n        },\r\n        {\r\n            name: \"Azumarill\",\r\n            ntnlnum: \"#184\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/azumarill.png\",\r\n            types: [\"Water\", \"Fairy\"],\r\n            description: 'It spends most of its time in the water. On sunny days, Azumarill floats on the surface of the water and sunbathes.'\r\n        },\r\n        {\r\n            name: \"Umbreon\",\r\n            ntnlnum: \"#197\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/umbreon.png\",\r\n            types: [\"Dark\"],\r\n            description: 'When this Pokémon becomes angry, its pores secrete a poisonous sweat, which it sprays at its opponent’s eyes.'\r\n        },\r\n        {\r\n            name: \"Murkrow\",\r\n            ntnlnum: \"#198\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/murkrow.png\",\r\n            types: [\"Dark\", \"Flying\"],\r\n            description: 'It has a weakness for shiny things. It’s been known to sneak into the nests of Gabite—noted collectors of jewels—in search of treasure.'\r\n        },\r\n        {\r\n            name: \"Forretress\",\r\n            ntnlnum: \"#205\",\r\n            img: \"https://img.pokemondb.net/artwork/vector/large/forretress.png\",\r\n            types: [\"Bug\", \"Steel\"],\r\n            description: 'When something approaches it, it fires off fragments of its steel shell in attack. This is not a conscious action but a conditioned reflex.'\r\n        },\r\n    ],\r\n    types:[\"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"]\r\n}\r\n\r\n    \r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}